# lapply(page_htmls, function(x) lapply(x, extract_table))
tables <- page_htmls %>%
lapply(function(x) lapply(x, extract_table)) %>%
lapply(rbindlist)
extract_table <- function(html) {
table <- html %>%
html_nodes("table") %>%
.[[1]]
html_table %>%
data.table
article_urls <- html %>%
html_nodes("td a") %>%
html_attr("href") %>%
.[startsWith(., "doc?refNo=")]
print(table)
table <- format_table(table)
print(article_urls)
table <- data.table(table, article_url = article_urls)
return(table)
}
# page_htmls %>% lapply(. %>% lapply(extract_table))
# lapply(page_htmls, function(x) lapply(x, extract_table))
tables <- page_htmls %>%
lapply(function(x) lapply(x, extract_table)) %>%
lapply(rbindlist)
extract_table <- function(html) {
table <- html %>%
html_nodes("table") %>%
.[[1]] %>%
html_table %>%
data.table
article_urls <- html %>%
html_nodes("td a") %>%
html_attr("href") %>%
.[startsWith(., "doc?refNo=")]
table <- format_table(table)
return(table)
}
# page_htmls %>% lapply(. %>% lapply(extract_table))
# lapply(page_htmls, function(x) lapply(x, extract_table))
tables <- page_htmls %>%
lapply(function(x) lapply(x, extract_table)) %>%
lapply(rbindlist)
View(tables)
extract_table <- function(html) {
table <- html %>%
html_nodes("table") %>%
.[[1]] %>%
html_table %>%
data.table
article_urls <- html %>%
html_nodes("td a") %>%
html_attr("href") %>%
.[startsWith(., "doc?refNo=")]
table <- format_table(table)
print(article_urls)
return(table)
}
View(tables)
# page_htmls %>% lapply(. %>% lapply(extract_table))
# lapply(page_htmls, function(x) lapply(x, extract_table))
tables <- page_htmls %>%
lapply(function(x) lapply(x, extract_table)) %>%
lapply(rbindlist)
extract_table <- function(html) {
table <- html %>%
html_nodes("table") %>%
.[[1]] %>%
html_table %>%
data.table
article_urls <- html %>%
html_nodes("td a") %>%
html_attr("href") %>%
.[startsWith(., "doc?refNo=")]
table <- format_table(table) %>%
data.table(article_url = article_urls)
return(table)
}
# page_htmls %>% lapply(. %>% lapply(extract_table))
# lapply(page_htmls, function(x) lapply(x, extract_table))
tables <- page_htmls %>%
lapply(function(x) lapply(x, extract_table)) %>%
lapply(rbindlist)
View(table)
View(table[[6]])
View(tables[[6]])
extract_table <- function(html) {
table <- html %>%
html_nodes("table") %>%
# .[[1]] %>%
html_table %>%
data.table
article_urls <- html %>%
html_nodes("td a") %>%
html_attr("href") %>%
.[startsWith(., "doc?refNo=")]
table <- format_table(table) %>%
data.table(article_url = article_urls)
return(table)
}
# page_htmls %>% lapply(. %>% lapply(extract_table))
# lapply(page_htmls, function(x) lapply(x, extract_table))
tables <- page_htmls %>%
lapply(function(x) lapply(x, extract_table)) %>%
lapply(rbindlist)
a %>% html_nodes("table") %>% html_table
a %>% html_nodes("table") %>% html_table %>% data.table()
a
a %>% html_nodes("td")
a %>% html_nodes("td") %>% html_text
a %>% html_nodes("td") %>% html_attr("href")
a %>% html_nodes("td") %>% html_attrs
a %>% html_nodes("td") %>% html_children()
a %>% html_nodes("td") %>% html_children %>% html_attrs
a
a %>% html_nodes("td")
a %>% html_nodes("tr")
a %>% html_nodes("tr") %>% html_text
a %>% html_nodes("tr")
a %>% html_nodes("tr") %>% html_children
a %>% html_nodes("tr") %>% html_children %>% .[seq.int(1, length(.), 3)]
a %>% html_nodes("tr") %>% html_children %>% .[seq.int(3, length(.), 3)]
a %>% html_nodes("tr") %>% html_children %>% .[seq.int(3, length(.), 3)] %>% html_node("a") %<% html_attr("href")
a %>% html_nodes("tr") %>% html_children %>% .[seq.int(3, length(.), 3)] %>% html_node("a") %.% html_attr("href")
a %>% html_nodes("tr") %>% html_children %>% .[seq.int(3, length(.), 3)] %>% html_node("a") %>% html_attr("href")
extract_table <- function(html) {
table <- html %>%
html_nodes("table") %>%
.[[1]] %>%
html_table %>%
data.table
nc <- ncol(table)
article_urls <- html %>%
html_nodes("tr") %>%
html_children %>%
.[seq.int(start = nc, end = length(.), by = nc)] %>%
html_node("a") %>%
html_attr("href")
table <- data.table(table, article_url = article_urls) %>%
format_table
return(table)
}
tables <- page_htmls %>%
lapply(function(x) lapply(x, extract_table)) %>%
lapply(rbindlist)
View(tables)
View(tables[[6]])
extract_table <- function(html) {
table <- html %>%
html_nodes("table") %>%
.[[1]] %>%
html_table %>%
data.table
nc <- ncol(table)
article_urls <- html %>%
html_nodes("tr") %>%
html_children %>%
.[seq.int(start = 3, end = length(.), by = 3)] %>%
html_node("a") %>%
html_attr("href")
table <- data.table(table, article_url = article_urls) %>%
format_table
return(table)
}
tables <- page_htmls %>%
lapply(function(x) lapply(x, extract_table)) %>%
lapply(rbindlist)
View(tables)
View(tables[[5]])
a  %>%
html_nodes("tr") %>%
html_children %>%
.[seq.int(start = 3, end = length(.), by = 3)] %>%
html_node("a") %>%
html_attr("href")
extract_table <- function(html) {
table <- html %>%
html_nodes("table") %>%
.[[1]] %>%
html_table %>%
data.table
nc <- ncol(table)
article_urls <- html %>%
html_nodes("tr") %>%
html_children %>%
.[seq.int(from = nc, to = length(.), by = nc)] %>%
html_node("a") %>%
html_attr("href")
table <- data.table(table, article_url = article_urls) %>%
format_table
return(table)
}
tables <- page_htmls %>%
lapply(function(x) lapply(x, extract_table)) %>%
lapply(rbindlist)
View(tables)
View(tables[[6]])
paste0(NA, "hi")
paste0(NULL, "hi")
"a" %>% paste("hello", .)
"a" %>% paste("hello")
# http://www.sfc.hk/edistributionWeb/gateway/EN/news-and-announcements/news/enforcement-news/?year=2020&month=1
base_url <- "http://www.sfc.hk/edistributionWeb/gateway/EN/news-and-announcements/news/enforcement-news/"
extract_table <- function(html, base_url = NULL) {
table <- html %>%
html_nodes("table") %>%
.[[1]] %>%
html_table %>%
data.table
nc <- ncol(table)
article_urls <- html %>%
html_nodes("tr") %>%
html_children %>%
.[seq.int(from = nc, to = length(.), by = nc)] %>%
html_node("a") %>%
html_attr("href") %>%
paste0(base_url, .)
table <- data.table(table, article_url = article_urls) %>%
format_table
return(table)
}
tables <- page_htmls %>%
lapply(function(x) lapply(x, extract_table(base_url = base_url))) %>%
lapply(rbindlist)
tables <- page_htmls %>%
lapply(function(x) lapply(x, extract_table, base_url = base_url)) %>%
lapply(rbindlist)
View(tables)
View(tables[[6]])
extract_table <- function(html, base_url = NULL) {
table <- html %>%
html_nodes("table") %>%
.[[1]] %>%
html_table %>%
data.table
num_cols <- ncol(table)
article_urls <- html %>%
html_nodes("tr") %>%
html_children %>%
.[seq.int(from = 2 * num_cols, to = length(.), by = num_cols)] %>%
html_node("a") %>%
html_attr("href") %>%
paste0(base_url, .)
table <- data.table(format(table), article_url = article_urls)
return(table)
}
tables <- page_htmls %>%
lapply(function(x) lapply(x, extract_table, base_url = base_url)) %>%
lapply(rbindlist)
warnings()
View(tables)
View(tables[[6]])
extract_table <- function(html, base_url = NULL) {
table <- html %>%
html_nodes("table") %>%
.[[1]] %>%
html_table %>%
data.table
num_cols <- ncol(table)
article_urls <- html %>%
html_nodes("tr") %>%
html_children %>%
.[seq.int(from = num_cols, to = length(.), by = num_cols)] %>%
html_node("a") %>%
html_attr("href") %>%
paste0(base_url, .)
article_urls[1] <- "article_url"
table <- data.table(table, article_url = article_urls) %>%
format_table
return(table)
}
tables <- page_htmls %>%
lapply(function(x) lapply(x, extract_table, base_url = base_url)) %>%
lapply(rbindlist)
View(tables)
View(tables[[6]])
format_table <- function(table) {
table <- table[-1,]
names(table) <- c("publish_date", "known_entities", "action", "action_url")
table$`Company/Name` <- str_split(table$`Company/Name`, "(\n|\r|\t)+")
return(table);
}
extract_table <- function(html, base_url = NULL) {
table <- html %>%
html_nodes("table") %>%
.[[1]] %>%
html_table %>%
data.table
num_cols <- ncol(table)
article_urls <- html %>%
html_nodes("tr") %>%
html_children %>%
.[seq.int(from = num_cols, to = length(.), by = num_cols)] %>%
html_node("a") %>%
html_attr("href") %>%
paste0(base_url, .)
table <- data.table(table, article_url = article_urls) %>%
format_table
return(table)
}
tables <- page_htmls %>%
lapply(function(x) lapply(x, extract_table, base_url = base_url)) %>%
lapply(rbindlist)
View(tables)
View(tables[[4]])
format_table <- function(table) {
table <- table[-1,]
names(table) <- c("publish_date", "known_entities", "action", "action_url")
table$known_entities <- str_split(table$known_entities, "(\n|\r|\t)+")
return(table);
}
tables <- page_htmls %>%
lapply(function(x) lapply(x, extract_table, base_url = base_url)) %>%
lapply(rbindlist)
View(tables)
View(tables[[6]])
View(tables[[1]])
message("hello", "my")
source('~/Documents/personal/playground/r_webscraping/r_webscraper.R', echo=TRUE)
View(tables)
View(tables[[24]])
save_tables <- tables
save_sfc <- sfc
View(sfc)
View(sfc[[3]][[24]])
View(sfc[[3]][[23]])
sfc_table <- rbindlist(tables)
View(sfc_table)
nrow(sfc_table)
names(sfc_table)
sfc_table_save <- sfc_table
library(qfR)
help(writeToPsql)
# Convenience function for writing to psql
writePsql <- function(data, table, append = FALSE, overwrite = FALSE) {
writeToPsql(data = data,
table = table,
dbname = kDbname,
env = kEnv,
username = kUser,
overwrite = overwrite,
append = append,
rowNames = FALSE)
}
hk_sfc_enforcement_news_table <- sfc_table
View(sfc_table)
# write enforcement news table to entity_db as hk_sfc_enforcement_news
writePsql(data = hk_sfc_enforcement_news_table, table = "hk_sfc_enforcement_news")
# Global Variables for Postgres
kEnv <- "dev"
kUser <- Sys.info()[["user"]] # get current user
kDbname <- "entity_db"
# write enforcement news table to entity_db as hk_sfc_enforcement_news
writePsql(data = hk_sfc_enforcement_news_table, table = "hk_sfc_enforcement_news")
# write enforcement news table to entity_db as hk_sfc_enforcement_news
writePsql(data = hk_sfc_enforcement_news_table, table = "hk_sfc_enforcement_news")
# write enforcement news table to entity_db as hk_sfc_enforcement_news
writePsql(data = hk_sfc_enforcement_news_table, table = "hk_sfc_enforcement_news")
# write enforcement news table to entity_db as hk_sfc_enforcement_news
writePsql(data = hk_sfc_enforcement_news_table, table = "hk_sfc_enforcement_news")
library(RPostgreSQL)
# write enforcement news table to entity_db as hk_sfc_enforcement_news
writePsql(data = hk_sfc_enforcement_news_table, table = "hk_sfc_enforcement_news")
# write enforcement news table to entity_db as hk_sfc_enforcement_news
writePsql(data = hk_sfc_enforcement_news_table, table = "hk_sfc_enforcement_news")
queryPsql("SELECT * FROM place_metadata LIMIT 1", env = "dev", username = "apan", dbname = "entity_db")
queryPsql("SELECT * FROM place_metadata LIMIT 1", env = "dev", username = "austin", dbname = "entity_db")
remove.packages('RPostgreSQL')
source('~/Documents/qf/qfilm/entityModule/hk_sfc/hk_sfc_crawler_utils.R', echo=TRUE)
source('~/Documents/qf/qfilm/entityModule/hk_sfc/hk_sfc_crawler_utils.R', echo=TRUE)
hkSfcEnforcementNewsTable <- queryPsql("select * from hk_sfc_enforcement_news", env = "dev", username = "apan", dbname = "entity_db")
hkSfcEnforcementNewsTable <- queryPsql("select * from hk_sfc_enforcement_news", env = "dev", username = "apan", dbname = "entity_db")
hkSfcEnforcementNewsTable <- queryPsql("select * from hk_sfc_enforcement_news_subjects", env = "dev", username = "apan", dbname = "entity_db")
hkSfcEnforcementNewsTable <- queryPsql("select * from hk_sfc_enforcement_news", env = "dev", username = "apan", dbname = "entity_db")
hkSfcEnforcementNewsSubjects <- queryPsql("select * from hk_sfc_enforcement_news_subjects", env = "dev", username = "apan", dbname = "entity_db")
westernFirstNames <- getWesternNames("forename", entityDbParams)
entityDbParams <- getDbParams(pwServiceKey = "sqldb.entity.connectInfo",
local = T,
env = "dev")
westernFirstNames <- getWesternNames("forename", entityDbParams)
westernLastNames <- getWesternNames("surname", entityDbParams)
aliasMetadataAddressTables <- generateAliasMetadataAddressTables(hkSfcEnforcementNewsTable,
hkSfcEnforcementNewsSubjects,
sfcUrl,
westernFirstNames,
westernLastNames)
View(aliasMetadataAddressTables)
View(aliasMetadataAddressTables[["personMetadata"]])
hkSfcEnforcementNewsTable <- queryPsql("select * from hk_sfc_enforcement_news", env = "dev", dbname = "entity_db", username = "apan")
View(hkSfcEnforcementNewsTable)
paste(hkSfcEnforcementNewsTable$article_body, collapse = "\n")
paste(hkSfcEnforcementNewsTable$article_body, collapse = "\n") -> allText
?toJSON
a <- hkSfcEnforcementNewsTable[1:2]
write(toJSON(a), "test.json")
getwd()
a <- hkSfcEnforcementNewsTable[, .(known_entities, article_body)]
View(a)
write(toJSON(a), "test.json")
(hkSfcEnforcementNewsTable$known_entities) %>% str_split("|") %>% length %>% sum
length(list(1, 2))
nrow(hkSfcEnforcementNewsTable)
(hkSfcEnforcementNewsTable$known_entities) %>% str_split("|") %>% unlist %>% length %>% sum
(hkSfcEnforcementNewsTable$known_entities) %>% str_split("|") %>% unlist %>% length
(hkSfcEnforcementNewsTable$known_entities[1:5]) %>% str_split("|")
(hkSfcEnforcementNewsTable$known_entities[1:5]) %>% str_split("\\|")
(hkSfcEnforcementNewsTable$known_entities[1:5]) %>% str_split("\\|") %>% length
(hkSfcEnforcementNewsTable$known_entities[1:5]) %>% str_split("\\|") %>% unlist
(hkSfcEnforcementNewsTable$known_entities[1:5]) %>% str_split("\\|") %>% unlist %>% length
(hkSfcEnforcementNewsTable$known_entities) %>% str_split("\\|") %>% unlist %>% length
hkSfcAliases <- queryPsql("select sfc.document_id, string_agg(e.alias, '|')
from hk_sfc_enforcement_news as sfc
inner join
(select entity_id, string_agg(a.alias, '|') as alias from
(select alias, entity_id
from person_alias
where entity_id ilike '%_hk_sfc_%'
union
select alias, entity_id
from organization_alias
where entity_id ilike '%_hk_sfc_%') as a
group by entity_id) as e
on e.entity_id ilike concat('%', sfc.document_id, '%')
group by sfc.document_id;", "dev", "entity_db", "apan")
View(hkSfcAliases)
hkSfcAliases <- queryPsql("select sfc.article_body, string_agg(e.alias, '|') as known_entities
from hk_sfc_enforcement_news as sfc
inner join
(select entity_id, string_agg(a.alias, '|') as alias from
(select alias, entity_id
from person_alias
where entity_id ilike '%_hk_sfc_%'
union
select alias, entity_id
from organization_alias
where entity_id ilike '%_hk_sfc_%') as a
group by entity_id) as e
on e.entity_id ilike concat('%', sfc.document_id, '%')
group by sfc.document_id;", "dev", "entity_db", "apan")
write(toJSON(hkSfcAliases), "db.json")
hkSfcAliases <- queryPsql("select sfc.article_body, concat(sfc.known_entities, '|', string_agg(e.alias, '|')) as known_entities
from hk_sfc_enforcement_news as sfc
inner join
(select entity_id, string_agg(a.alias, '|') as alias from
(select alias, entity_id
from person_alias
where entity_id ilike '%\_hk\_sfc\_%'
union
select alias, entity_id
from organization_alias
where entity_id ilike '%\_hk\_sfc\_%') as a
group by entity_id) as e
on e.entity_id ilike concat('%\_', sfc.document_id, '\_%')
group by sfc.document_id", "dev", "entity_db", "apan")
hkSfcAliases <- queryPsql("select sfc.article_body, concat(sfc.known_entities, '|', string_agg(e.alias, '|')) as known_entities
from hk_sfc_enforcement_news as sfc
inner join
(select entity_id, string_agg(a.alias, '|') as alias from
(select alias, entity_id
from person_alias
where entity_id ilike '%\\_hk\\_sfc\\_%'
union
select alias, entity_id
from organization_alias
where entity_id ilike '%\\_hk\\_sfc\_%') as a
group by entity_id) as e
on e.entity_id ilike concat('%\\_', sfc.document_id, '\\_%')
group by sfc.document_id", "dev", "entity_db", "apan")
hkSfcAliases <- queryPsql("select sfc.article_body, concat(sfc.known_entities, '|', string_agg(e.alias, '|')) as known_entities
from hk_sfc_enforcement_news as sfc
inner join
(select entity_id, string_agg(a.alias, '|') as alias from
(select alias, entity_id
from person_alias
where entity_id ilike '%\\_hk\\_sfc\\_%'
union
select alias, entity_id
from organization_alias
where entity_id ilike '%\\_hk\\_sfc\\_%') as a
group by entity_id) as e
on e.entity_id ilike concat('%\\_', sfc.document_id, '\\_%')
group by sfc.document_id", "dev", "entity_db", "apan")
write(toJSON(hkSfcAliases), "db.json")
Sys.time()
source('~/Documents/qf/qfilm/entityModule/hk_sfc/hk_sfc_crawler_utils.R', echo=TRUE)
ac <- getAlreadyCrawledUrls(2019, entityDbParams)
ac <- getAlreadyCrawledUrls(2019, entityDbParams)
View(ac)
length(ac)
ac <- ac[-(1:4)]
ac <- getAlreadyCrawledUrls(2020, entityDbParams)
length(ac)
ac <- ac[-(1:4)]
crawlSfcEnforcementDirectory(sfcUrl, 2020, ac)
crawlSfcEnforcementDirectory(sfcUrl, 2020, ac) -> b
View(b0)
View(b)
generateSfcSubjectsTable(b, entityDbParams$env)
generateSfcSubjectsTable(b, entityDbParams$env) -> c
View(c)
c(1,2,3) == 2
c("a", "b", "c") == "c"
names(hkSfcAliases)
names(hkSfcAliases) == "known_entities"
ac <- getAlreadyCrawledUrls(2020, entityDbParams)
length(ac)
crawlSfcEnforcementDirectory(sfcUrl, 2020, ac)
crawlSfcEnforcementDirectory(sfcUrl, 2020, ac) -> d
library(spacyr)
setwd("~/Documents/personal/spacy-ner-annotator/training")
spacy_initialize("custom_model_en_core_web_sm")
entity_extract(spacy_parse("John Smith is a good example"))
